{"version":3,"sources":["images/camera_motion.png","components/videos sync nonrecursive /.mp4$","components/videos/Anlage_SICK.mp4","components/videos/PXL_sonne_video.mp4","components/videos/SICK_Sensor.mp4","components/videos/VID_Brunnen.mp4","components/videos/VID_Hand.mp4","components/videos/VID_Showroom.mp4","components/videos/VID_Traktor.mp4","components/videos/VID_i_Bau.mp4","components/videos/VID_office.mp4","components/videos/VID_plarndt.mp4","components/videos/video-bank.mp4","components/videos/video-plants.mp4","components/socket.js","components/LogViewer.jsx","components/ConfigInputField.jsx","components/ConfigChanger.jsx","components/HandleTraining.jsx","components/UploadForm.jsx","components/CheckConnection.jsx","components/ImageSlider.jsx","components/ExportMesh.jsx","components/RenderedVideo.jsx","components/Information.jsx","components/Accordion.jsx","components/TerminateProcess.jsx","components/MyCard.jsx","components/VideoSlider.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./Anlage_SICK.mp4","./PXL_sonne_video.mp4","./SICK_Sensor.mp4","./VID_Brunnen.mp4","./VID_Hand.mp4","./VID_Showroom.mp4","./VID_Traktor.mp4","./VID_i_Bau.mp4","./VID_office.mp4","./VID_plarndt.mp4","./video-bank.mp4","./video-plants.mp4","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","socket","io","cors","origin","methods","credentials","transports","allowEIO3","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","_regeneratorRuntime","t","r","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","LogViewer","_useState","useState","_useState2","_slicedToArray","logMessages","setLogMessages","useEffect","on","data","prevMessages","updatedMessages","_toConsumableArray","level","index","findIndex","log","timestamp","message","concat","fetchInitialLogMessages","timer","setInterval","fetchLogMessages","off","clearInterval","_ref","_asyncToGenerator","_callee","initialLogMessages","_context","sort","b","Date","apply","arguments","_ref2","_callee2","_context2","React","createElement","className","key","style","color","ConfigInputField","label","onChange","additionalText","htmlFor","ConfigChanger","newConfig","setNewConfig","_useState3","_useState4","configStatus","setConfigStatus","role","handleInputChange","event","_event$target","target","prevConfig","_objectSpread","_defineProperty","video_downsample","max_count","n_steps","subsample","aabb_scale","onClick","fetch","headers","Content-Type","body","JSON","stringify","response","json","console","error","HandleTraining","showConfigChanger","setShowConfigChanger","startButtonDisabled","setStartButtonDisabled","_useState5","_useState6","configButtonDisabled","setConfigButtonDisabled","onSave","ok","status","finally","setTimeout","disabled","prevShowConfigChanger","UploadForm","selectedFile","setSelectedFile","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","_useState7","_useState8","showButtons","setShowButtons","files","formData","FormData","append","onUploadProgress","progressEvent","progress","Math","round","loaded","total","width","aria-valuenow","aria-valuemin","aria-valuemax","CheckConnection","props","isConnected","Slider","images","setImages","trainingComplete","setTrainingComplete","fetchImages","t0","handleTrainingComplete","Carousel","image","Item","src","alt","ExportMesh","meshExported","setMeshExported","meshFileURL","setMeshFileURL","meshFileName","setMeshFileName","blob","URL","createObjectURL","filename","link","document","href","download","click","RenderedVideo","videoSource","setVideoSource","videoRenderingDone","setVideoRenderingDone","trainedFileURL","setTrainedFileURL","trainedFileName","setTrainedFileName","_useState9","_useState10","trainingDone","setTrainingDone","_useState11","_useState12","downloadButtonDisabled","setDownloadButtonDisabled","_useState13","_useState14","videoButtonDisabled","setVideoButtonDisabled","fetchTrainingUrl","fetchVideoUrl","videoURL","Fragment","ImageSlider","ReactPlayer","url","controls","playing","height","Information","Accordion","cards","activeIndex","setActiveIndex","card","prevIndex","handleCardClick","title","content","TerminateProcess","handleTerminateClick","margin","MyCard","cameramotion","maxWidth","VideoSlider","videoContext","require","videos","currentIndex","setCurrentIndex","videoRef","useRef","onSelect","newIndex","current","load","video","ref","autoPlay","muted","outline","maxHeight","App","connected","setIsConnected","connect","disconnect","open","class","textAlign","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.42f22f47.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camera_motion.0d1618db.png\";","var map = {\n\t\"./Anlage_SICK.mp4\": 80,\n\t\"./PXL_sonne_video.mp4\": 81,\n\t\"./SICK_Sensor.mp4\": 82,\n\t\"./VID_Brunnen.mp4\": 83,\n\t\"./VID_Hand.mp4\": 84,\n\t\"./VID_Showroom.mp4\": 85,\n\t\"./VID_Traktor.mp4\": 86,\n\t\"./VID_i_Bau.mp4\": 87,\n\t\"./VID_office.mp4\": 88,\n\t\"./VID_plarndt.mp4\": 89,\n\t\"./video-bank.mp4\": 90,\n\t\"./video-plants.mp4\": 91\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 79;","module.exports = __webpack_public_path__ + \"static/media/Anlage_SICK.4d6954de.mp4\";","module.exports = __webpack_public_path__ + \"static/media/PXL_sonne_video.107f7a8d.mp4\";","module.exports = __webpack_public_path__ + \"static/media/SICK_Sensor.c0ade551.mp4\";","module.exports = __webpack_public_path__ + \"static/media/VID_Brunnen.3b7c7950.mp4\";","module.exports = __webpack_public_path__ + \"static/media/VID_Hand.f6d19da9.mp4\";","module.exports = __webpack_public_path__ + \"static/media/VID_Showroom.c426abe7.mp4\";","module.exports = __webpack_public_path__ + \"static/media/VID_Traktor.704f131f.mp4\";","module.exports = __webpack_public_path__ + \"static/media/VID_i_Bau.8301cbfa.mp4\";","module.exports = __webpack_public_path__ + \"static/media/VID_office.ebac6992.mp4\";","module.exports = __webpack_public_path__ + \"static/media/VID_plarndt.d7335ebf.mp4\";","module.exports = __webpack_public_path__ + \"static/media/video-bank.dda123b7.mp4\";","module.exports = __webpack_public_path__ + \"static/media/video-plants.f8e9af87.mp4\";","import { io } from 'socket.io-client';\r\n\r\nexport const socket = io('localhost:5000', {\r\n    cors: {\r\n        origin: \"localhost:3000\",\r\n        methods: [\"GET\", \"POST\"],\r\n        credentials: true,\r\n        transports: ['websocket', 'polling'],\r\n    },\r\n    allowEIO3: true,\r\n    reconnection: true,         // Aktiviere die automatische Reconnect-Funktion\r\n    reconnectionAttempts: 10,    // Anzahl der Reconnect-Versuche\r\n    reconnectionDelay: 10000,    // Verzögerung zwischen Reconnect-Versuchen in Millisekunden\r\n    reconnectionDelayMax: 50000, // Maximale Verzögerung zwischen Reconnect-Versuchen\r\n});","import React, { useEffect, useState } from 'react';\r\nimport { socket } from './socket';\r\n\r\nconst LogViewer = () => {\r\n  const [logMessages, setLogMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on('log_message', (data) => {\r\n      setLogMessages((prevMessages) => {\r\n        let updatedMessages = [...prevMessages];\r\n\r\n        if (\r\n          data.level === 'TRAINING' ||\r\n          data.level === 'RENDERING' ||\r\n          data.level === 'COLMAP'\r\n        ) {\r\n          const index = updatedMessages.findIndex((log) => log.level === data.level);\r\n\r\n          if (index !== -1) {\r\n            updatedMessages[index] = {\r\n              timestamp: data.timestamp,\r\n              level: data.level,\r\n              message: data.message,\r\n            };\r\n          } else {\r\n            updatedMessages = [\r\n              {\r\n                timestamp: data.timestamp,\r\n                level: data.level,\r\n                message: data.message,\r\n              },\r\n              ...updatedMessages,\r\n            ];\r\n          }\r\n        } else {\r\n          updatedMessages = [\r\n            {\r\n              timestamp: data.timestamp,\r\n              level: data.level,\r\n              message: data.message,\r\n            },\r\n            ...updatedMessages,\r\n          ];\r\n        }\r\n\r\n        return updatedMessages;\r\n      });\r\n    });\r\n\r\n    if (logMessages.length === 0) {\r\n      fetchInitialLogMessages();\r\n    }\r\n\r\n    // Start a timer to fetch logs periodically\r\n    const timer = setInterval(fetchLogMessages, 5000); // Fetch logs every 5 seconds\r\n\r\n    return () => {\r\n      socket.off('log_message');\r\n      clearInterval(timer); // Clean up the timer when the component unmounts\r\n    };\r\n  }, []);\r\n\r\n  const fetchInitialLogMessages = async () => {\r\n    const initialLogMessages = [\r\n      {\r\n        timestamp: '-----------------------',\r\n        level: 'INFO',\r\n        message: 'Logs from the video to nerf trainer',\r\n      },\r\n      // Add more initial log messages if needed\r\n    ];\r\n\r\n    initialLogMessages.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n\r\n    setLogMessages(initialLogMessages);\r\n  };\r\n\r\n  const fetchLogMessages = async () => {\r\n    try {\r\n      // Fetch latest log messages here and update the state\r\n    } catch (error) {\r\n      console.error('Error fetching latest logs:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card mt-3\">\r\n      <div className=\"card-body\">\r\n        {logMessages.map((log, index) => (\r\n          <div key={index}>\r\n            <span style={{ color: 'blue' }}>{log.timestamp}</span> |{' '}\r\n            {log.level === 'INFO' && <span style={{ color: 'blue' }}>{log.level}</span>}\r\n            {log.level === 'TRAINING' && <span style={{ color: 'green' }}>{log.level}</span>}\r\n            {log.level === 'RENDERING' && <span style={{ color: 'orange' }}>{log.level}</span>}\r\n            {log.level === 'COLMAP' && <span style={{ color: 'purple' }}>{log.level}</span>}\r\n            - <span style={{ color: 'black' }}>{log.message}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogViewer;\r\n","import React from 'react';\r\n\r\nconst ConfigInputField = ({\r\n  label,\r\n  id,\r\n  name,\r\n  value,\r\n  onChange,\r\n  additionalText,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group row my-2\">\r\n      <label htmlFor={id} className=\"col-sm-2 col-form-label\">\r\n        {label}\r\n      </label>\r\n      <div className=\"col-sm-2\">\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          id={id}\r\n          name={name}\r\n          value={value || ''}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n      <div className=\"col-sm-8 col-form-label\">\r\n        <p>{additionalText}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigInputField;\r\n","import React, { useState } from 'react';\r\nimport ConfigInputField from './ConfigInputField'\r\nconst ConfigChanger = () => {\r\n  const [newConfig, setNewConfig] = useState({});\r\n  const [configStatus, setConfigStatus] = useState(false);\r\n\r\n  const handleChangeConfig = () => {\r\n    // Call the backend API to update the YAML configuration\r\n    fetch('/update_yaml_config', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8' // Updated Content-Type header\r\n      },\r\n      body: JSON.stringify(newConfig)\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setConfigStatus(true);\r\n        console.log('Config saved successfully');\r\n      })\r\n      .catch(error => {\r\n        setConfigStatus(false);\r\n        console.error('Error saving config:', error);\r\n      });\r\n  };\r\n  if (configStatus) {\r\n    return (\r\n      <div className=\"mt-3\">\r\n        <div className=\"alert alert-success\" role=\"alert\">\r\n          Configs changed successfully!\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setNewConfig(prevConfig => ({ ...prevConfig, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h4 className=\"my-3\">Configurations</h4>\r\n        <ConfigInputField\r\n          label=\"Video Downsample:\"\r\n          id=\"videoDownsample\"\r\n          name=\"video_downsample\"\r\n          value={newConfig.video_downsample || ''}\r\n          onChange={handleInputChange}\r\n          additionalText=\"Extracts every 2nd frame by default. Increase to extract every nth frame.\"\r\n        />\r\n        <ConfigInputField\r\n          label=\"Max Images of Video:\"\r\n          id=\"max_count\"\r\n          name=\"max_count\"\r\n          value={newConfig.max_count || ''}\r\n          onChange={handleInputChange}\r\n          additionalText=\"Up to 380 frames can fit into GPU memory for training.\"\r\n        />\r\n        <ConfigInputField\r\n          label=\"N Steps:\"\r\n          id=\"nSteps\"\r\n          name=\"n_steps\"\r\n          value={newConfig.n_steps || ''}\r\n          onChange={handleInputChange}\r\n          additionalText=\"Number of training steps.\"\r\n        />\r\n        <ConfigInputField\r\n          label=\"Subsample:\"\r\n          id=\"subsample\"\r\n          name=\"subsample\"\r\n          value={newConfig.subsample || ''}\r\n          onChange={handleInputChange}\r\n          additionalText=\"After running COLMAP, the number of images for training can be reduced.\"\r\n        />\r\n        <ConfigInputField\r\n          label=\"aabb_scale:\"\r\n          id=\"aabb_scale\"\r\n          name=\"aabb_scale\"\r\n          value={newConfig.aabb_scale || ''}\r\n          onChange={handleInputChange}\r\n          additionalText=\"Scale factor for larger scenes. 1=Scene fits within a unit cube. [1,2,4,8,16,32,...,128]\"\r\n        />\r\n      </div>\r\n\r\n      <button className=\"btn btn-primary\" onClick={handleChangeConfig}>\r\n        Save Config\r\n      </button>\r\n      {configStatus && <p>{configStatus}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfigChanger;\r\n","import React, { useState } from 'react';\r\nimport ConfigChanger from './ConfigChanger';\r\n\r\nconst HandleTraining = () => {\r\n    const [showConfigChanger, setShowConfigChanger] = useState(false);\r\n    const [startButtonDisabled, setStartButtonDisabled] = useState(false);\r\n    const [configButtonDisabled, setConfigButtonDisabled] = useState(false);\r\n\r\n    const handleStartTraining = () => {\r\n        setStartButtonDisabled(true); \r\n        \r\n        fetch('/start-training', {\r\n            method: 'POST',\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                } else {\r\n                    throw new Error('Failed to start training.');\r\n                }\r\n            })\r\n            .then((data) => {\r\n                const { status, message } = data;\r\n                if (status === 'success') {\r\n                    console.log(message);\r\n                } else {\r\n                    console.error(message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            })\r\n            .finally(() => {\r\n                setTimeout(() => {\r\n                    setStartButtonDisabled(false);\r\n                }, 5000);\r\n            });\r\n    };\r\n\r\n    const handleChangeConfigs = () => {\r\n        setConfigButtonDisabled(true); \r\n        \r\n        setShowConfigChanger((prevShowConfigChanger) => !prevShowConfigChanger);\r\n\r\n        setTimeout(() => {\r\n            setConfigButtonDisabled(false);\r\n        }, 5000);\r\n    };\r\n\r\n    const handleSaveConfigs = () => {\r\n        setShowConfigChanger(false);\r\n    };\r\n\r\n    return (\r\n        <div>{showConfigChanger && <ConfigChanger onSave={handleSaveConfigs} />}\r\n            <div className=\"mt-3\">\r\n                <button className=\"btn btn-primary m-2\" onClick={handleStartTraining} disabled={startButtonDisabled}>\r\n                    Start Training\r\n                </button>\r\n                <button className=\"btn btn-secondary\" onClick={handleChangeConfigs} disabled={configButtonDisabled}>\r\n                    Change Configs\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HandleTraining;\r\n","import React, { useState } from 'react';\r\nimport LogViewer from './LogViewer';\r\nimport HandleTraining from './HandleTraining';\r\n\r\nconst UploadForm = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState('');\r\n  const [showButtons, setShowButtons] = useState(false);\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (!selectedFile) {\r\n      setUploadStatus('No file selected.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', selectedFile);\r\n\r\n    setUploadProgress(0);\r\n    setUploadStatus('Uploading...');\r\n\r\n    fetch('/upload', {\r\n      method: 'POST',\r\n      body: formData,\r\n      onUploadProgress: (progressEvent) => {\r\n        const progress = Math.round((progressEvent.loaded / progressEvent.total) * 100);\r\n        setUploadProgress(progress);\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          setUploadStatus('File uploaded successfully!');\r\n          setShowButtons(true);\r\n        } else {\r\n          setUploadStatus('Upload failed.');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        setUploadStatus('Upload failed.');\r\n        console.error(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" className=\"form-control mb-3\" onChange={handleFileChange} />\r\n      <button className=\"btn btn-primary\" onClick={handleUpload}>\r\n        Upload\r\n      </button>\r\n      {uploadProgress > 0 && (\r\n        <div className=\"progress mt-3\">\r\n          <div\r\n            className=\"progress-bar\"\r\n            role=\"progressbar\"\r\n            style={{ width: `${uploadProgress}%` }}\r\n            aria-valuenow={uploadProgress}\r\n            aria-valuemin=\"0\"\r\n            aria-valuemax=\"100\"\r\n          >\r\n            {uploadProgress}%\r\n          </div>\r\n        </div>\r\n      )}\r\n      {uploadStatus && (\r\n        <div className={`mt-3 alert ${uploadStatus === 'File uploaded successfully!' ? 'alert-success' : 'alert-danger'}`} role=\"alert\">\r\n          {uploadStatus}\r\n        </div>\r\n      )}\r\n      {showButtons && (\r\n        <HandleTraining />\r\n      )}\r\n      <LogViewer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;\r\n","import React from 'react';\r\n\r\n\r\nconst CheckConnection = (props) => {\r\n\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <p className={`connection-status ${props.isConnected ? 'connected' : 'not-connected'}`}>\r\n        Checking connection to server: {props.isConnected ? 'connected' : 'not connected'}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckConnection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { socket } from './socket';\r\n\r\nconst Slider = () => {\r\n  const [images, setImages] = useState([]);\r\n  const [trainingComplete, setTrainingComplete] = useState(false);\r\n  const fetchImages = async () => {\r\n    try {\r\n      const response = await fetch('/api/images');\r\n      const data = await response.json();\r\n      setImages(data.images);\r\n    } catch (error) {\r\n      console.error('Error fetching images:', error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    // Listen for the 'training_complete' event\r\n    socket.on('training_complete', handleTrainingComplete);\r\n\r\n    // Clean up the event listener\r\n    return () => {\r\n      socket.off('training_complete', handleTrainingComplete);\r\n    };\r\n  }, []);\r\n\r\n  const handleTrainingComplete = () => {\r\n    fetchImages();\r\n    setTrainingComplete(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      {trainingComplete && images.length > 0 && (\r\n        <Carousel>\r\n          {images.map((image, index) => (\r\n            <Carousel.Item key={index}>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src={`/api/images/${image}`}\r\n                alt={`Slider Image ${index + 1}`}\r\n              />\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { socket } from './socket'\r\n\r\nconst ExportMesh = () => {\r\n\r\n    const [meshExported, setMeshExported] = useState(false);\r\n    const [meshFileURL, setMeshFileURL] = useState('');\r\n    const [meshFileName, setMeshFileName] = useState('');\r\n    const fetchMeshFilename = () => {\r\n        fetch('/get-filename-mesh')\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                const { filename } = data;\r\n                setMeshFileName(filename)\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    };\r\n    const fetchMeshURL = () => {\r\n        fetch('/api/mesh-url')\r\n            .then((response) => response.blob())\r\n            .then((blob) => {\r\n                const meshFileURL = URL.createObjectURL(blob);\r\n                setMeshFileURL(meshFileURL);\r\n            });\r\n    };\r\n    const handleDownload = () => {\r\n        const link = document.createElement('a');\r\n        link.href = meshFileURL;\r\n        link.download = meshFileName;\r\n        link.click();\r\n    };\r\n    const handleMesh = () => {\r\n        // Send a request to Flask to start rendering the video\r\n        fetch('/export-mesh')\r\n            .then(response => {\r\n                // Handle the response as needed\r\n                console.log('Mesh export started');\r\n            })\r\n            .catch(error => {\r\n                // Handle errors\r\n                console.error('Error mesh export:', error);\r\n            });\r\n    };\r\n    useEffect(() => {\r\n        socket.on('export_mesh_complete', () => {\r\n            setMeshExported(true);\r\n            console.log('mesh export done');\r\n            fetchMeshURL();\r\n            fetchMeshFilename();\r\n        });\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <button className=\"mesh-button-container btn btn-primary my-3\" onClick={handleMesh}>\r\n                Export Mesh\r\n            </button>\r\n            {meshExported &&\r\n                <button className=\"mesh-button-container btn btn-primary m-3\" onClick={handleDownload}>\r\n                    Download Mesh\r\n                </button>\r\n            }\r\n        </div>\r\n    );\r\n}  \r\nexport default ExportMesh;","import React, { useEffect, useState } from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport { socket } from './socket'\r\nimport ImageSlider from './ImageSlider';\r\nimport ExportMesh from './ExportMesh';\r\nconst RenderedVideo = () => {\r\n\r\n  const [videoSource, setVideoSource] = useState('');\r\n  const [videoRenderingDone, setVideoRenderingDone] = useState(false);\r\n  const [trainedFileURL, setTrainedFileURL] = useState('');\r\n  const [trainedFileName, setTrainedFileName] = useState('');\r\n  const [trainingDone, setTrainingDone] = useState(false);\r\n  const [downloadButtonDisabled, setDownloadButtonDisabled] = useState(false);\r\n  const [videoButtonDisabled, setVideoButtonDisabled] = useState(false);\r\n\r\n  const fetchFilename = () => {\r\n    fetch('/get-filename')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const { filename } = data;\r\n        setTrainedFileName(filename);\r\n        console.log(trainedFileName)\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    socket.on('training_complete', () => {\r\n      setTrainingDone(true);\r\n      fetchTrainingUrl();\r\n      fetchFilename();\r\n    });\r\n    socket.on('rendering_complete', () => {\r\n      setVideoRenderingDone(true);\r\n      fetchVideoUrl();\r\n    });\r\n  }, []);\r\n\r\n  const fetchVideoUrl = () => {\r\n    fetch('/api/rendered-video-url')\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        const videoURL = URL.createObjectURL(blob);\r\n        setVideoSource(videoURL);\r\n      });\r\n  };\r\n\r\n  const fetchTrainingUrl = () => {\r\n    fetch('/api/trained-file-url')\r\n      .then((response) => response.blob())\r\n      .then((blob) => {\r\n        const trainedFileURL = URL.createObjectURL(blob);\r\n        setTrainedFileURL(trainedFileURL);\r\n      });\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    setDownloadButtonDisabled(true);\r\n\r\n    const link = document.createElement('a');\r\n    link.href = trainedFileURL;\r\n    link.download = trainedFileName;\r\n    link.click();\r\n\r\n    setTimeout(() => {\r\n      setDownloadButtonDisabled(false);\r\n    }, 5000);\r\n  };\r\n  const handleVideo = () => {\r\n    setVideoButtonDisabled(true);\r\n    fetch('/render-video')\r\n      .then(response => {\r\n        console.log('Video rendering started');\r\n      })\r\n      .catch(error => {\r\n        console.error('Error rendering video:', error);\r\n      })\r\n      .finally(() => {\r\n        setTimeout(() => {\r\n          setVideoButtonDisabled(false);\r\n        }, 5000);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {trainingDone && (\r\n        <div>\r\n          <header className=\"container\">\r\n            <h2>Output Screenshots from Trained NeRF</h2>\r\n          </header>\r\n          <ImageSlider />\r\n          <div className=\"container my-3\">\r\n            {videoRenderingDone &&\r\n              <div className=\"video-container\">\r\n                <ReactPlayer\r\n                  url={videoSource}\r\n                  controls={true}\r\n                  playing={true}\r\n                  width=\"100%\"\r\n                  height=\"100%\"\r\n                  className=\"react-player\"\r\n                />\r\n              </div>}\r\n            <ExportMesh />\r\n            <button\r\n              className=\"download-button-container btn btn-primary my-3\"\r\n              onClick={handleDownload}\r\n              disabled={downloadButtonDisabled}\r\n            >\r\n              Download Training\r\n            </button>\r\n            {!videoRenderingDone &&\r\n              <button\r\n                className=\"video-button-container btn btn-primary m-3\"\r\n                onClick={handleVideo}\r\n                disabled={videoButtonDisabled}\r\n              >\r\n                Render Video\r\n              </button>\r\n            }\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RenderedVideo;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Information = () => {\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"my-3\">\r\n                <div className=\"card card-body\">\r\n                    <h4>How to Train Your Own Neural Radiance Field?</h4>\r\n                    <p>\r\n                        This application utilizes the instant-ngp framework for training Neural Radiance Fields (NeRFs). For foundational understanding of the technology, you may refer to: https://neuralradiancefields.io/. The primary objective of this application is to train a neural network to represent a captured scene in 3D. Accepted input formats include videos, images in a .zip file, or R3D files generated using the iPhone app Record3D. Default parameters have been optimized to yield the best results in most scenarios. If any issues arise during the process, you may re-upload the video and click \"Start Training\"; the program will resume from where it left off.\r\n                    </p>\r\n                    <div className=\"alert alert-warning\" role=\"alert\">\r\n                        Note: It is essential to keep this page open in the background to maintain the same socket client connection.\r\n                    </div>\r\n                    <p>\r\n                        To achieve optimal results, consider refining the dataset. For video input, ensure the subject is captured from multiple angles and that overlapping of objects is present for feature matching across frames. For images, avoid uploading blurred pictures, and again, make sure there is object overlap. Upon completion of the pipeline, you will be able to view training screenshots and render a video. The trained model can also be downloaded and viewed in the NGP-GUI.\r\n                    </p>\r\n                    <h4>Additional Important Details Regarding Training:</h4>\r\n                    <p>\r\n                        Graphic card memory is limited; therefore, only a certain number of images will be extracted to fit within this constraint. By default, every second frame is extracted, up to a maximum of 400 images (approximately equivalent to a 30-second video). To accommodate longer videos, you can adjust the frame extraction rate using the \"ChangeConfig\" - Video Downsample option. For example, setting the value to 10 will extract every 10th frame, thus allowing for a longer video duration. Increasing the \"Max Image of Video\" configuration will only result in exceeding the GPU memory limit, rendering the training of a NeRF model unfeasible.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Information;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Accordion = ({ cards }) => {\r\n  const [activeIndex, setActiveIndex] = useState(null);\r\n\r\n  const handleCardClick = (index) => {\r\n    setActiveIndex((prevIndex) => (prevIndex === index ? null : index));\r\n  };\r\n\r\n  const renderCards = () => {\r\n    return cards.map((card, index) => (\r\n      <div\r\n        key={index}\r\n        className={`card my-2 ${activeIndex === index ? 'active' : ''}`}\r\n      >\r\n        <div\r\n          className=\"card-header\"\r\n          onClick={() => handleCardClick(index)}\r\n        >\r\n          <span className={`arrow mx-2 ${activeIndex === index ? 'open' : ''}`}>&#8595;</span>\r\n          {card.title}\r\n        </div>\r\n        {activeIndex === index && (\r\n          <div className=\"card-body\">{card.content}</div>\r\n        )}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  return <div className=\"accordion\">{renderCards()}</div>;\r\n};\r\n\r\nAccordion.propTypes = {\r\n  cards: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.node.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Accordion;\r\n","import React from 'react';\r\n\r\nconst TerminateProcess = () => {\r\n  const handleTerminateClick = async () => {\r\n    try {\r\n      const response = await fetch('/terminate_colmap_processes', {\r\n        method: 'POST',\r\n      });\r\n      if (response.ok) {\r\n        console.log('Colmap-Prozesse wurden beendet.');\r\n      } else {\r\n        console.log('Fehler beim Beenden der Colmap-Prozesse.');\r\n      }\r\n    } catch (error) {\r\n        console.log('Fehler beim Beenden der Colmap-Prozesse.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={handleTerminateClick}\r\n      className=\"btn btn-danger\"\r\n      style={{ margin: '10px' }}\r\n    >\r\n      Terminate Process\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default TerminateProcess;","import React from 'react';\r\nimport Accordion from './Accordion';\r\nimport cameramotion from '../images/camera_motion.png';\r\nimport TerminateProcess from './TerminateProcess';\r\nconst MyCard = () => {\r\n  const cards = [\r\n    {\r\n      title: 'How to Capture a Quality Video?',\r\n      content: (\r\n        <div className=\"text-left\">\r\n          <p className=\"mb-2\">\r\n            For optimal results, it's crucial to prepare a good dataset. Below is an image illustrating beneficial and detrimental camera movements. Aim to capture the scene slowly and make sure to circle the object at least twice from two different perspectives.\r\n          </p>\r\n          <div className=\"text-center\">\r\n            <img\r\n              src={cameramotion}\r\n              alt=\"Beneficial and Detrimental Camera Movements\"\r\n              className=\"card-image mx-auto text-center\"\r\n              style={{ maxWidth: '50%', height: 'auto' }}\r\n            />\r\n          </div>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Terminate Server Processes After Reloading the Page',\r\n      content: (\r\n        <div>\r\n          <p>If the page is reloaded, server processes may continue to run in the background without client communication. Use the button below to terminate these processes. Exercise caution while doing so.</p>\r\n          <TerminateProcess />\r\n        </div>\r\n      ),\r\n    }\r\n  ];\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Accordion cards={cards} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCard;","import React, { useState, useRef } from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\n\r\nconst VideoSlider = () => {\r\n  const videoContext = require.context('./videos', false, /\\.mp4$/);\r\n\r\n  const videos = videoContext.keys().map(videoContext);\r\n\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const videoRef = useRef(null);\r\n\r\n  const handleSlideChange = newIndex => {\r\n    setCurrentIndex(newIndex);\r\n    videoRef.current.load();\r\n  };\r\n\r\n  return (\r\n    <div className=\"slider\">\r\n      {videos.length > 0 && (\r\n        <Carousel activeIndex={currentIndex} onSelect={handleSlideChange}>\r\n          {videos.map((video, index) => (\r\n            <Carousel.Item key={index}>\r\n              <video\r\n                ref={videoRef}\r\n                autoPlay\r\n                muted\r\n                className=\"d-block w-100\"\r\n                style={{ outline: 'none', maxWidth: '100%', maxHeight: '50vh' }}\r\n              >\r\n                <source src={video} type=\"video/mp4\" />\r\n                Your browser does not support the video tag.\r\n              </video>\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoSlider;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { socket } from './components/socket';\r\nimport UploadForm from './components/UploadForm';\r\nimport CheckConnection from './components/CheckConnection';\r\nimport RenderedVideo from './components/RenderedVideo';\r\nimport Information from './components/Information';\r\nimport ImageSlider from './components/ImageSlider';\r\nimport MyCard from './components/MyCard';\r\nimport VideoSlider from './components/VideoSlider';\r\n\r\nconst App = () => {\r\n    const [isConnected, setIsConnected] = useState(socket.connected);\r\n\r\n    useEffect(() => {\r\n        socket.connect();\r\n\r\n        socket.on('connect', () => {\r\n            setIsConnected(true);\r\n        });\r\n\r\n        socket.on('disconnect', () => {\r\n            setIsConnected(false);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect(); // Disconnect the socket when the component unmounts\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n            <h1 className=\"text-center mb-4\">NeRF-Trainer</h1>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-lg-11\">\r\n                    <details open>\r\n                        <summary>\r\n                            <span class=\"arrow\">Hide Background Information</span>\r\n                        </summary>\r\n                        <div className=\"my-2 text-center\">\r\n                            <h2>Abstract</h2>\r\n                            <p style={{ textAlign: 'justify' }}>\r\n                                Neural Radiance Fields (NeRF) represents a method that combines principles from classical computer graphics and machine learning to construct 3D scene representations from 2D images. Instead of directly reconstructing the complete 3D scene geometry, NeRF generates a volumetric representation known as \"radiance fields,\" capable of assigning color and density to any point in the relevant 3D space. However, generating \"neural radiance fields\" requires developer expertise, substantially limiting its industrial application. Hence, we present SICK-NeRF. The NeR-Trainer is a user-friendly framework that enables the construction of custom NeRF representations, allowing anyone, regardless of their developer experience, to generate NeRFs.\r\n                                If you haven't yet engaged with NeRF, we recommend reading the official paper: <a href=\"https://www.matthewtancik.com/nerf\">NeRF - Representing Scenes for View Synthesis</a>.\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"my-2 text-center\">\r\n                            <h2 className=\"mb-3\">Results from Trained NeRFs</h2>\r\n                            <VideoSlider />\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                            <h2 className=\"my-3\">Procedure</h2>\r\n                            <p style={{ textAlign: 'justify' }}>\r\n                                Creating NeRFs requires a specific approach. First, the video must be prepared to serve as training input. Individual frames from the video are extracted to later serve as training data. Using COLMAP, a Structure From Motion tool, the camera positions in the world coordinate system are estimated. These camera positions are crucial for training as the generated colors and densities heavily depend on the viewing angles.\r\n\r\n                                COLMAP starts by extracting features from the images. These features are distinctive points that can be recognized in various images. These features must be invariant to affine transformations and brightness. COLMAP employs the SIFT algorithm here. During the feature matching step, features between pairs of images are compared to find matches.\r\n\r\n                                Using these matches, a \"Sparse Map\" is created in the final step. Here, camera positions are estimated, and some points in three-dimensional space are mapped. The COLMAP step is time-consuming as images are compared pairwise, which can take a significant amount of time with many images. For further interest, we refer you to the paper: <a href=\"https://demuc.de/papers/schoenberger2016sfm.pdf\">Structure-from_Motion Revisited</a>.\r\n\r\n                                After the COLMAP step, the collected information is stored in a \"JSON\" file, which serves as input for the actual training.</p>\r\n                        </div>\r\n                    </details>\r\n                    <CheckConnection isConnected={isConnected} />\r\n                    <Information />\r\n                    <RenderedVideo />\r\n                    <ImageSlider />\r\n                    <div className=\"card my-5\">\r\n                        <div className=\"card-body\">\r\n                            <UploadForm />\r\n                        </div>\r\n                    </div>\r\n                    <MyCard />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}